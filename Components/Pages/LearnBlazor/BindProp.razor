@page "/learnblazor/bindprop"
<div class="row">
	<div class="col-6 border p-3">
		<h3 class="text-primary">Product Playground</h3>
		<hr />

		IsActive: @Product.IsActive
		<br />
		Price: @Product.Price
		<br />
		This Product is: @(Product.IsActive ? "Active" : "Inactive")
		<br />
		IsActive:
		<input type="checkbox" @bind="@Product.IsActive" @bind:event="oninput" />
		<br />
		Input Price:
		<input type="number" @bind="@Product.Price" @bind:event="oninput" />
		<br />
		<br />
		Product Properties:
		<select @bind="@selectedProp">
			@foreach (var prop in Product.ProductProperties)
			{
				<option value="@prop.Key">@prop.Key</option>
			}
		</select>
	</div>

	<div class="col-6 border p-3">
		<h3 class="text-primary">Product - Summary</h3>
		<hr />

		Name: @Product.Name

		IsActive: @Product.IsActive
		<br />
		Price: @Product.Price
		<br />
		This Product is: @(Product.IsActive ? "Active" : "Inactive")
		<br />

		<br />
		Selected Prop: @selectedProp

		<br />
		@if (!string.IsNullOrEmpty(selectedProp))
		{
			<p>Selected Value: @Product.ProductProperties.FirstOrDefault(u => u.Key == selectedProp).Value</p>
		}
	</div>
</div>

@code {
	private string selectedProp = "";

	Product Product = new()
	{
		Id = 1,
		Name = "Product 1",
		IsActive = true,
		Price = 5,
		ProductProperties = new List<Product_Prop>()
		{ 
			new Product_Prop { Id = 1, Key = "Color", Value = "Red" },
			new Product_Prop { Id = 2, Key = "Size", Value = "M" },
			new Product_Prop { Id = 3, Key = "Flavor", Value = "Rose" }
		}
	};
}
